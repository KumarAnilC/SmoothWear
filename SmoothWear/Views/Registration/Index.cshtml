@model SmoothWear.Models.Tbl_UserDetails

@{
    ViewBag.Title = "Register";
}

<style>
    .form-group {
        color: aliceblue;
    }
</style>

<h2 class="text-center text-primary">Registration Page</h2>

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <!-- Center the form -->
        @using (Html.BeginForm("Register", "Registration", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <!-- Name -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Email -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div id="emailError" class="text-danger"></div>

                <!-- Phone -->
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Gender (Dropdown) -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Male", Value = "Male" },
                            new SelectListItem { Text = "Female", Value = "Female" },
                            new SelectListItem { Text = "Other", Value = "Other" }
                        }, "-- Select Gender --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Date of Birth (DOB) -->
                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Address -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Password -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Confirm Password -->
                <div class="form-group">
                    @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @*<input type="password" name="ConfirmPassword" class="form-control" />*@
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Submit -->
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Register" class="btn btn-primary btn-block" />
                    </div>
                </div>

            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        // Check if email already exists via AJAX
        $('#Email').on('blur', function () {
            var email = $('#Email').val();  // Get email value from input field
            $.ajax({
                url: '/Registration/IsEmailExist',  // Correct URL with leading slash and correct controller
                data: { email: email },
                type: 'GET',
                success: function (data) {
                    if (!data) {
                        $('#emailError').text("Email already exists!");  // Show error if email exists
                    } else {
                        $('#emailError').text("");  // Clear error if email is available
                    }
                },
                error: function () {
                    $('#emailError').text("An error occurred while checking the email.");
                }
            });
        });
    });

</script>
