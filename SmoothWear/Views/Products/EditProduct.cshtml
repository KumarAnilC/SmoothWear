@model SmoothWear.Models.Tbl_ProductDetails

@{
    ViewBag.Title = "Edit Product";
}

<style>
   .control-label{
        color: aliceblue;
    }
</style>

<h2 class="text-center text-primary">Edit Product</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success text-center">
        @TempData["Success"]
    </div>
}

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        @using (Html.BeginForm("EditProduct", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.ProductId)

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(m => m.ProductName, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Product Image", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="file" name="ProductImageFile" class="form-control" accept="image/*" />
                        <br />
                        @if (!string.IsNullOrEmpty(Model.ProductImage))
                        {
                            <img src="@Url.Content(Model.ProductImage)" alt="Product Image" style="height: 60px;" />
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ProductCategory, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.ProductCategory, new SelectList(new[] {
                            new { Value = "Washing", Text = "Washing" },
                            new { Value = "Ironing", Text = "Ironing" },
                            new { Value = "Both", Text = "Ironing & Washing" }
                        }, "Value", "Text", Model.ProductCategory), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Cost, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Cost, new { @class = "form-control", type = "number", step = "0.01", min = "0" })
                        @Html.ValidationMessageFor(m => m.Cost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Description, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 4 })
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <button type="submit" class="btn btn-success">Update Product</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
