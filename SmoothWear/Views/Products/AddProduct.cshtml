@model SmoothWear.Controllers.ProductDetailsViewModel

@{
    ViewBag.Title = "Product List";
}

<style>
    .form-group {
        color: aliceblue;
    }
</style>

<h2 class="text-center text-primary">Add New Product</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success text-center">
        @TempData["Success"]
    </div>
}

    }

<div class="row">
    <div class="col-md-6 col-md-offset-3">

        @using (Html.BeginForm("AddProduct", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(m => m.ProductName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Product Image", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="file" name="ProductImageFile" class="form-control" accept="image/*" required />
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ProductCategory, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.ProductCategory, new SelectList(new[] {
                            new { Value = "Washing", Text = "Washing" },
                            new { Value = "Ironing", Text = "Ironing" },
                            new { Value = "Both", Text = "Ironing & Washing" }
                        }, "Value", "Text"), "Select Category", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Cost, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Cost, new { @class = "form-control", type = "number", step = "0.01", min = "0" })
                        @Html.ValidationMessageFor(m => m.Cost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 4 })
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <button type="submit" class="btn btn-success ">Add Product</button>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
